name: {{.WorkflowName}}

on:
  {{range .Triggers}}
  {{if eq . "push"}}push:
    branches: [{{range $.Branches}}"{{.}}"{{if ne . (index $.Branches (sub (len $.Branches) 1))}}, {{end}}{{end}}]{{end}}
  {{if eq . "pull_request"}}pull_request:
    branches: [{{range $.Branches}}"{{.}}"{{if ne . (index $.Branches (sub (len $.Branches) 1))}}, {{end}}{{end}}]{{end}}
  {{if eq . "schedule"}}schedule:
    - cron: '0 2 * * *'{{end}}
  {{if eq . "workflow_dispatch"}}workflow_dispatch:{{end}}
  {{end}}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: {{.Timeout}}
    
    services:
      {{range .Services}}
      {{if eq . "redis"}}redis:
        image: redis:7
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5{{end}}
      {{end}}

    strategy:
      matrix:
        node-version: [{{.NodeVersion}}]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      {{range .CachePaths}}
      - name: Cache {{.}}
        uses: actions/cache@v3
        with:
          path: {{.}}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      {{end}}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Set Environment Variables
        run: |
          {{range $key, $value := .Environment}}
          echo "{{$key}}={{$value}}" >> $GITHUB_ENV
          {{end}}
      
      - name: Run linter
        run: npm run lint --if-present
      
      - name: Run tests
        run: npm test
      
      - name: Build application
        run: npm run build --if-present
      
      - name: Generate coverage report
        run: npm run coverage --if-present
      
      - name: Upload coverage reports to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella